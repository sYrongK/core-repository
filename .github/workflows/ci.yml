name: core CI with Gradle

# 실행 환경 및 작업 설정
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: sYrongK/core #repository와 브랜치 설정 안 하면, 현재 repository의 기본 브랜치에서 소스를 가져온다.
        ref: refs/heads/develop # ref/heads 접두사 사용 안 해도 자동으로 적용됨.
        token: ${{secrets.STORAGE_TOKEN}} # ${{secrets.선언해 둔 비밀변수명}} GitHub Actions에서 사용하는 비밀변수로, CI/CD파이프라인에서 안전하게 사용할 수 있게 보호된다. Settings > Secrets and variables > Actions에서 선언해두면 됨
    - name: Set up JDK # build.gradle에 설정해뒀으면 안 해도 됨
      uses: actions/setup-java@v2 # 이 Action의 실행환경(여기선 우분투)에 지정해둔 JDK 버전을 자동으로 다운로드하고 설치해준다.
      with:
        distribution: 'zulu' # JDK 배포판
        java-version: '21' # JDK 버전
    - name: Build with Gradle
      run: ./gradlew build
    - name: Publish to Github Packages
      run: ./gradlew publish
      env: # build.gradle에서 'maven-publish'플러그인을 사용하여 패키지를 GitHub Packages에 배포할 때, GitHub에 인증하기 위해 필요한 환경변수.
        GITHUB_USERNAME: ${{secrets.STORAGE_USERNAME}} # build.gradle의 credentials에서 사용해서 안전하게 배포할 수 있다.
        GITHUB_TOKEN: ${{secrets.STORAGE_TOKEN}}


# 실행 조건: push 이벤트, pull_request 이벤트 등
on:
  repository_dispatch:
    types: [build-trigger] # 사용자 정의 이벤트 타입
# on:
#   push:
#     branches: 
#     - main
  # pull_request:
  #   branches:
  #   - main
